402. Remove K Digits
Solved
Medium
Topics
Companies
Given string num representing a non-negative integer num, and an integer k, return the smallest possible integer after removing k digits from num.

 

Example 1:

Input: num = "1432219", k = 3
Output: "1219"
Explanation: Remove the three digits 4, 3, and 2 to form the new number 1219 which is the smallest.
Example 2:

Input: num = "10200", k = 1
Output: "200"
Explanation: Remove the leading 1 and the number is 200. Note that the output must not contain leading zeroes.
Example 3:

Input: num = "10", k = 2
Output: "0"
Explanation: Remove all the digits from the number and it is left with nothing which is 0.
 

Constraints:

1 <= k <= num.length <= 105
num consists of only digits.
num does not have any leading zeros except for the zero itself.

class Solution {
public:
    string removeKdigits(string num, int k) {
        int size=num.size();
        stack<char> st;

        int count=0;
        if(size ==k){
            return "0";
        } 
        
        
        for(int i=0;i<size;i++){
            while(!st.empty() && st.top()>num[i] && count<k){  
                st.pop();
                count++;
            }
            st.push(num[i]);
            
        }
        while(count<k){
            st.pop();
            count++;
        }

        if(st.empty()){
            return "0";
        }


        string ans="";
        while(!st.empty()){
            ans.push_back(st.top());
            st.pop();
        }

        while(ans.size()!=0 && ans.back()=='0'){
            ans.pop_back();
        }

        // int index=ans.length()-1;
        // while(ans[index]=='0'){
        //     ans.pop_back();
        //     index--;
        // }

        if(ans.empty()){
            return "0";
        }

        reverse(ans.begin(),ans.end());
        return ans;
    }
};
