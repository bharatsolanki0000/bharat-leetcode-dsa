42. Trapping Rain Water
Solved
Hard
Topics
Companies
Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.

 

Example 1:


Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6
Explanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.
Example 2:

Input: height = [4,2,0,3,2,5]
Output: 9
 

Constraints:

n == height.length
1 <= n <= 2 * 104
0 <= height[i] <= 105

class Solution {
public:
    int trap(vector<int>& height) {
        int size=height.size();
        vector<int> leftmax(size,-1);
        vector<int> rightmax(size,-1);
        int maxi=0;

        leftmax[0]=height[0];
        for(int i=1;i<size;i++){
            if(leftmax[i-1] < height[i]){
                leftmax[i]=height[i];
            }else{
                leftmax[i]=leftmax[i-1];
            }
        }

        rightmax[size-1]=height[size-1];
        for(int i=size-2;i>=0;i--){
            if(rightmax[i+1] < height[i]){
                rightmax[i]=height[i];
            }
            else{
                rightmax[i]=rightmax[i+1];
            }
        }

        
        for(int i=0;i<size;i++){
            if(rightmax[i]<leftmax[i]){
                leftmax[i]=rightmax[i];
            }
        }

        //leftmax is now the main vector
        for(int i=0;i<size;i++){
            int sum=leftmax[i]-height[i];
            maxi+=sum;
        }
        return maxi;





    }
};
