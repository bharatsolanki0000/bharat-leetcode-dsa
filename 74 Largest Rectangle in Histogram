84. Largest Rectangle in Histogram
Solved
Hard
Topics
Companies
Given an array of integers heights representing the histogram's bar height where the width of each bar is 1, return the area of the largest rectangle in the histogram.

 

Example 1:


Input: heights = [2,1,5,6,2,3]
Output: 10
Explanation: The above is a histogram where width of each bar is 1.
The largest rectangle is shown in the red area, which has an area = 10 units.
Example 2:


Input: heights = [2,4]
Output: 4
 

Constraints:

1 <= heights.length <= 105
0 <= heights[i] <= 104

class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
       stack<int>st;
       int size=heights.size();
       vector<int> prevsmaller(size,0);
       vector<int> nextsmaller(size,0); 

       // next or right or end smaller index

       st.push(-1);
       for(int i=size-1;i>=0;i--){
        while( st.top()!=-1 && height[st.top()] >=heights[i] ){
            st.pop();
        }
        nextsmaller[i]=st.top();
        st.push(i);
       }

        stack<int> ct;

        // prev or left or start smaller index
         ct.push(-1);
       for(int i=0;i<size;i++){
        while(ct.top()!=-1 && heights[ct.top()] >=heights[i] ){
            ct.pop();
        }
        prevsmaller[i]=ct.top();
        ct.push(i);
       }

       int oldarea=INT_MIN;
       for(int i=0;i<size;i++){
        // area=height * width
        int length=heights[i];

        if(nextsmaller[i]==-1){
            nextsmaller[i]=size;
        }
        int width=nextsmaller[i]-prevsmaller[i]-1;
        
        int newarea=length*width;

       if(oldarea<=newarea){
        oldarea=newarea;
       }
       }

       return oldarea;

       

    }
};
