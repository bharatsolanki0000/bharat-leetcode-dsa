54. Spiral Matrix
medium problem
Given an m x n matrix, return all elements of the matrix in spiral order.



Example 1:
Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [1,2,3,6,9,8,7,4,5]

Example 2:
Input: matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]
Output: [1,2,3,4,8,12,11,10,9,5,6,7]

class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int> ans;
        int n = matrix.size();
        int m = matrix[0].size();
        int count = 0;
        int startrow = 0;
        int startcol = 0;
        int endrow = n - 1;
        int endcol = m - 1;
        int total = m * n;
        while (count < total) {

            // first row
            for (int i = startcol; count < total && i <= endcol; i++) {
                ans.push_back(matrix[startcol][i]);
                count++;
            }

            startrow++;

            for (int j = startrow; count < total && j <= endrow; j++) {
                ans.push_back(matrix[j][endcol]);
                count++;
            }

            endcol--;

            for (int k = endcol; count < total && k >= startcol; k--) {
                ans.push_back(matrix[endrow][k]);
                count++;
            }

            endrow--;

            for (int l = endrow; count < total && l >= startrow; l--) {
                ans.push_back(matrix[l][startcol]);
                count++;
            }
            startcol++;
        }
        return ans;
    }
};
